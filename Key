local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/SiriusSoftwareLtd/Rayfield/main/source.lua'))()

local Window = Rayfield:CreateWindow({
    Name = "Every Clique +1 JUMP",
    LoadingTitle = "Carregando...",
    LoadingSubtitle = "OP-SCRIPTS",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = nil,
        FileName = "Clique +1 Jump"
    }
})

local MainTab = Window:CreateTab("MAIN", 4483362458)
local ModTab = Window:CreateTab("Modification", 4483362458)

local function teleportPlayer(x, y, z)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(x, y, z)
end

local allWorldsCoordinates = {
    {-10240.02, 1875.26, 127.68},
    {-5119.85, 6212.01, 146.31},
    {-46.72, 8740.63, 150.62},
    {5025.27, 13439.87, 162.18},
    {10097.67, 19195.47, 170.22},
    {15385.41, 27325.68, 186.39},
    {20506.56, 45660.35, 210.50},
    {25625.75, 64010.96, 238.80},
    {30745.48, 82357.59, 264.05},
    {35866.23, 102660.49, 295.14},
    {40987.79, 122850.11, 325.22},
    {46105.09, 143088.44, 356.12},
    {51225.59, 163345.12, 385.93},
    {56346.43, 183588.45, 416.52}
}

local currentCoordIndex = 1
local teleportCount = 0

MainTab:CreateLabel("Enter the starting world number for special teleport. Example: Enter 3 to start at WORLD 3")

MainTab:CreateInput({
    Name = "Starting World Number",
    PlaceholderText = "Enter world number",
    RemoveTextAfterFocusLost = true,
    Callback = function(Text)
        local worldNumber = tonumber(Text)
        if worldNumber and worldNumber >= 1 and worldNumber <= #allWorldsCoordinates then
            currentCoordIndex = worldNumber
        else
            currentCoordIndex = 1
        end
    end
})

MainTab:CreateToggle({
    Name = "Special Farm",
    CurrentValue = false,
    Flag = "SpecialTeleport",
    Callback = function(Value)
        if Value then
            coroutine.wrap(function()
                while Rayfield.Flags["SpecialTeleport"].CurrentValue do
                    teleportPlayer(unpack(allWorldsCoordinates[currentCoordIndex]))

                    if currentCoordIndex < #allWorldsCoordinates then
                        teleportCount = teleportCount + 1
                        if teleportCount >= 5 then
                            currentCoordIndex = currentCoordIndex + 1
                            teleportCount = 0
                        end
                    end

                    wait(5.5)
                end
            end)()
        else
            teleportCount = 0
        end
    end
})

local function createWorldToggle(name, toggleCoordinates, initialCoordinates)
    local Button
    Button = MainTab:CreateToggle({
        Name = name,
        CurrentValue = false,
        Flag = name,
        Callback = function(Value)
            if Value then
                Button.TeleportCoroutine = coroutine.create(function()
                    while Rayfield.Flags[name].CurrentValue do
                        teleportPlayer(unpack(toggleCoordinates))
                        wait(0.5)
                    end
                end)
                coroutine.resume(Button.TeleportCoroutine)
            else
                if Button.TeleportCoroutine then
                    coroutine.close(Button.TeleportCoroutine)
                end
            end
        end
    })
    MainTab:CreateButton({
        Name = "INICIAL TP " .. name,
        Callback = function()
            teleportPlayer(unpack(initialCoordinates))
        end
    })
end

createWorldToggle("WORLD 1", {-10240.02, 1875.26, 127.68}, {-10240.32, 0.50, -31.62})
createWorldToggle("WORLD 2", {-5119.85, 6212.01, 146.31}, {-5116.75, 0.50, -34.43})
createWorldToggle("WORLD 3", {-46.72, 8740.63, 150.62}, {-44.91, 0.50, -62.73})
createWorldToggle("WORLD 4", {5025.27, 13439.87, 162.18}, {5026.42, 0.50, -32.92})
createWorldToggle("WORLD 5", {10097.67, 19195.47, 170.22}, {10097.88, 0.50, -38.16})
createWorldToggle("WORLD 6", {15385.41, 27325.68, 186.39}, {15386.82, 0.52, -65.53})
createWorldToggle("WORLD 7", {20506.56, 45660.35, 210.50}, {20507.23, 0.54, -52.23})
createWorldToggle("WORLD 8", {25625.75, 64010.96, 238.80}, {25625.18, 0.50, -58.45})
createWorldToggle("WORLD 9", {30745.48, 82357.59, 264.05}, {30745.79, 0.47, -63.20})
createWorldToggle("WORLD 10", {35866.23, 102660.49, 295.14}, {35869.18, 0.47, -62.22})
createWorldToggle("WORLD 11", {40987.79, 122850.11, 325.22}, {40988.64, 0.50, -74.03})
createWorldToggle("WORLD 12", {46105.09, 143088.44, 356.12}, {46107.07, 0.43, -60.36})
createWorldToggle("WORLD 13", {51225.59, 163345.12, 385.93}, {51227.18, -0.70, -75.27})
createWorldToggle("WORLD 14", {56346.43, 183588.45, 416.52}, {56346.97, -0.12, -64.95})

local AllWorldButton
AllWorldButton = MainTab:CreateToggle({
    Name = "ALL WORLD",
    CurrentValue = false,
    Flag = "AllWorldButton",
    Callback = function(Value)
        if Value then
            AllWorldButton.TeleportCoroutine = coroutine.create(function()
                while Rayfield.Flags["AllWorldButton"].CurrentValue do
                    for _, coords in ipairs(allWorldsCoordinates) do
                        teleportPlayer(unpack(coords))
                        wait(0.5)
                    end
                end
            end)
            coroutine.resume(AllWorldButton.TeleportCoroutine)
        else
            if AllWorldButton.TeleportCoroutine then
                coroutine.close(AllWorldButton.TeleportCoroutine)
            end
        end
    end
})

local originalSpeed = game.Players.LocalPlayer.Character.Humanoid.WalkSpeed
local originalJumpPower = game.Players.LocalPlayer.Character.Humanoid.JumpPower
local speedValue = originalSpeed
local jumpPowerValue = originalJumpPower

ModTab:CreateInput({
    Name = "SPEED Modifier",
    PlaceholderText = "Enter speed value",
    RemoveTextAfterFocusLost = false,
    Callback = function(Text)
        speedValue = tonumber(Text) or originalSpeed
    end
})

ModTab:CreateToggle({
    Name = "SPEED Modifier",
    CurrentValue = false,
    Flag = "SpeedModifier",
    Callback = function(Value)
        if Value then
            game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = speedValue
        else
            game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = originalSpeed
        end
    end
})

ModTab:CreateInput({
    Name = "JUMP Modifier",
    PlaceholderText = "Enter jump power value",
    RemoveTextAfterFocusLost = false,
    Callback = function(Text)
        jumpPowerValue = tonumber(Text) or originalJumpPower
    end
})

ModTab:CreateToggle({
    Name = "JUMP Modifier",
    CurrentValue = false,
    Flag = "JumpModifier",
    Callback = function(Value)
        if Value then
            game.Players.LocalPlayer.Character.Humanoid.JumpPower = jumpPowerValue
        else
            game.Players.LocalPlayer.Character.Humanoid.JumpPower = originalJumpPower
        end
    end
})

MainTab:CreateLabel("Example: 1/2 or 14/10")

local customCoordinates = {}
MainTab:CreateInput({
    Name = "Custom Coordinates",
    PlaceholderText = "Enter coordinates (e.g., 1/2 or 14/10)",
    RemoveTextAfterFocusLost = false,
    Callback = function(Text)
        customCoordinates = {}
        for coord in string.gmatch(Text, "%d+") do
            table.insert(customCoordinates, tonumber(coord))
        end
    end
})

MainTab:CreateToggle({
    Name = "Teleport to Custom Worlds",
    CurrentValue = false,
    Flag = "CustomTeleport",
    Callback = function(Value)
        if Value then
            AllWorldButton.TeleportCoroutine = coroutine.create(function()
                while Rayfield.Flags["CustomTeleport"].CurrentValue do
                    for _, coord in ipairs(customCoordinates) do
                        if allWorldsCoordinates[coord] then
                            teleportPlayer(unpack(allWorldsCoordinates[coord]))
                            wait(0.5)
                        end
                    end
                end
            end)
            coroutine.resume(AllWorldButton.TeleportCoroutine)
        else
            if AllWorldButton.TeleportCoroutine then
                coroutine.close(AllWorldButton.TeleportCoroutine)
            end
        end
    end
})
